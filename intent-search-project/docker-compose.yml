version: '3.8'

services:
  postgres:
    image: postgres:13
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U $$POSTGRES_USER']
    networks:
      - backend

  airflow-init:
    image: apache/airflow:2.5.0
    entrypoint: airflow db init
    depends_on:
      - postgres
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
    command: >
      bash -c "airflow users create --username admin --password admin"


    networks:
      - backend

  airflow-webserver:
    image: apache/airflow:2.5.0
    command: airflow webserver --port 8080
    depends_on:
      - airflow-init
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
      - _AIRFLOW_WWW_USER_CREATE=true
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW_WWW_USER_PASSWORD=admin
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./scripts:/opt/airflow/scripts
      - ./data:/opt/airflow/data
      - ./models:/opt/airflow/models
      - ./.env:/opt/airflow/.env
    ports:
      - '8080:8080'
    healthcheck:
      test: ['CMD', 'curl', '--fail', 'http://localhost:8080/health']
    networks:
      - backend

  airflow-scheduler:
    image: apache/airflow:2.5.0
    command: airflow scheduler
    depends_on:
      - airflow-webserver
    environment:
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql+psycopg2://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}
      - AIRFLOW__CORE__LOAD_EXAMPLES=False
    volumes:
      - ./airflow/dags:/opt/airflow/dags
      - ./airflow/logs:/opt/airflow/logs
      - ./scripts:/opt/airflow/scripts
      - ./data:/opt/airflow/data
      - ./models:/opt/airflow/models
      - ./.env:/opt/airflow/.env
    networks:
      - backend

  mlflow:
    build:
      context: .
      dockerfile: Dockerfile.mlflow
    volumes:
      - ./mlruns:/mlruns
      - ./scripts:/app/scripts
      - ./models:/app/models
    ports:
      - '5001:5000'
    environment:
      - MLFLOW_BACKEND_STORE_URI=sqlite:///mlruns/mlflow.db # change to postgres later if needed
      - MLFLOW_DEFAULT_ARTIFACT_ROOT=/mlruns
    networks:
      - backend

  app:
    build: .
    command: uvicorn main:app --host 0.0.0.0 --port 8000
    ports:
      - '8000:8000'
    volumes:
      - ./scripts:/app/scripts
      - ./data:/app/data
      - ./models:/app/models
      - ./.env:/app/.env
    depends_on:
      - mlflow
    networks:
      - backend

volumes:
  postgres_data:
  mlruns:

networks:
  backend:
